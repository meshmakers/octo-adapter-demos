parameters:
  - name: PublicRegistryServiceConnection
    type: string
  - name: Repository
    type: string
  - name: Dockerfile
    type: string
  - name: Architecture
    type: string
    default: linux/amd64
  - name: PrivateRegistryName
    type: string
  - name: PublicRegistryName
    type: string
    default: docker.io

steps:
  - task: Docker@2
    displayName: Login to ${{ parameters.PublicRegistryServiceConnection }}
    inputs:
      command: login
      containerRegistry: ${{ parameters.PublicRegistryServiceConnection }}

  - task: CmdLine@2
    condition: eq(variables.isRelease, true)
    displayName: Build/Push to public/private ${{ parameters.Repository }}:$(Build.BuildNumber)
    inputs:
      script: |
        docker buildx create --use --name mybuilder --bootstrap --config ~/buildkitd.default.toml &&
        docker buildx build --platform ${{ parameters.Architecture }} \
          --build-arg OCTO_PRIVATE_NUGET_SERVICE="$(NugetPrivateServer)" --build-arg OCTO_PRIVATE_NUGET_CERTIFICATE="$(NugetPrivateServerCa)" --build-arg OCTO_VERSION="$(OctoVersion)" \
          -f ${{ parameters.Dockerfile }} \
          -t ${{ parameters.PrivateRegistryName }}/${{ parameters.Repository }}:$(Build.BuildNumber) \
          -t ${{ parameters.PublicRegistryName }}/${{ parameters.Repository }}:$(Build.BuildNumber) \
          --push \
          $(System.DefaultWorkingDirectory) &&
        docker buildx rm mybuilder

  - task: CmdLine@2
    condition: or(eq(variables.isMain, true), eq(variables.isTest, true), eq(variables.isRelease, true))
    displayName: Build/Push to private ${{ parameters.Repository }}:$(Build.BuildNumber)
    inputs:
      script: |
        docker buildx create --use --name mybuilder --bootstrap --config ~/buildkitd.default.toml &&
        docker buildx build --platform ${{ parameters.Architecture }} \
          --build-arg OCTO_PRIVATE_NUGET_SERVICE="$(NugetPrivateServer)" --build-arg OCTO_PRIVATE_NUGET_CERTIFICATE="$(NugetPrivateServerCa)" --build-arg OCTO_VERSION="$(OctoVersion)" \
          -f ${{ parameters.Dockerfile }} \
          -t ${{ parameters.PrivateRegistryName }}/${{ parameters.Repository }}:$(Build.BuildNumber) \
          --push \
          $(System.DefaultWorkingDirectory) &&
        docker buildx rm mybuilder
  - task: CmdLine@2
    condition: and(ne(variables.isMain, true), ne(variables.isTest, true), ne(variables.isRelease, true))
    displayName: Build ONLY for non-main/test branch ${{ parameters.Repository }}:$(Build.BuildNumber)
    inputs:
      script: |
        docker buildx create --use --name mybuilder --bootstrap --config ~/buildkitd.default.toml &&
        docker buildx build --platform ${{ parameters.Architecture }} \
          --build-arg OCTO_PRIVATE_NUGET_SERVICE="$(NugetPrivateServer)" --build-arg OCTO_PRIVATE_NUGET_CERTIFICATE="$(NugetPrivateServerCa)" --build-arg OCTO_VERSION="$(OctoVersion)" \
          -f ${{ parameters.Dockerfile }} \
          -t ${{ parameters.PrivateRegistryName }}/${{ parameters.Repository }}:$(Build.BuildNumber) \
          $(System.DefaultWorkingDirectory) &&
        docker buildx rm mybuilder